@using System.Data
@using Api3il.Models;
@model DataTable;

@{
    var ListeEtudiant = ViewData["Etudiant"] as List<Etudiant>;
    var ListePresence = ViewData["Emargement"] as List<Emargement>;

    string GetPresenceStatus(DateTime dateEmargement)
    {
        TimeSpan timeOfDay = dateEmargement.TimeOfDay;

        TimeSpan matinStart = new TimeSpan(8, 30, 0);
        TimeSpan matinEnd = new TimeSpan(8, 35, 0);
        TimeSpan apresMidiStart = new TimeSpan(13, 30, 0);
        TimeSpan apresMidiEnd = new TimeSpan(13, 35, 0);

        if ((timeOfDay >= matinStart && timeOfDay <= matinEnd) || (timeOfDay >= apresMidiStart && timeOfDay <= apresMidiEnd))
        {
            return "Présent";
        }
        else
        {
            return "Absent";
        }
    }

}
<link href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.10.0/fullcalendar.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.10.0/fullcalendar.min.js"></script>
<!-- jsPDF -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.4/jspdf.min.js"></script>
<!-- jsPDF-AutoTable -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.6/jspdf.plugin.autotable.min.js"></script>
<style>
    body {
        background-color: #f2f2f2;
        font-family: Arial, sans-serif;
    }

    .header {
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 20px 0;
    }

        .header img {
            height: 50px; /* Taille du logo */
            margin-right: 20px; /* Espace entre le logo et le titre */
        }

        .header h2 {
            color: #ff6600; /* Couleur bleu */
            font-size: 24px; /* Taille du titre plus petite */
        }

    .table-header {
        background-color: #ff6600;
        color: #fff;
        font-weight: bold;
        font-size: 20px;
        padding: 10px;
    }

    .table-row {
        background-color: #fff;
    }

        .table-row:hover {
            background-color: #f8f9fa;
        }

    .filter-select {
        display: inline-block;
        margin-left: 10px;
        position: relative;
    }

        .filter-select select {
            padding: 5px;
            border: 1px solid #ccc;
            border-radius: 5px;
            width: 200px;
        }

        .filter-select::before {
            content: "\f0d7";
            font-family: "Font Awesome 5 Free";
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            font-size: 14px;
            color: #999;
            pointer-events: none;
        }

        .filter-select select:focus + ::before {
            color: #ff6600;
        }

    .filter-input {
        margin-bottom: 10px;
        padding: 5px;
        border: 1px solid #ccc;
        border-radius: 5px;
        width: 300px;
    }

    .search-label {
        color: #ff6600;
        font-weight: bold;
    }
</style>
@section Scripts {
    <script>
        document.getElementById('generate-pdf').addEventListener('click', function () {
            const doc = new jsPDF();
            
            doc.setFontSize(20);
            doc.text("Liste des absences", 75, 15, { align: 'center' }); 

            const espace = 5; 
            let yPosition = 15 + espace; 

            const table = document.getElementById('etudiantTable');
            const rows = table.querySelectorAll('tr');

            let data = []; 

           
            rows.forEach(row => {
                let rowData = [];
                const cells = row.querySelectorAll('td, th');
              
                cells.forEach(cell => {
                    rowData.push(cell.textContent.trim());
                });
                data.push(rowData);
            });
           
            doc.autoTable({
                startY: yPosition,
                head: [
                    ['Nom', 'Prénom', 'Emagement', 'Statut'] 
                ],
                body: data 
            });

            const now = new Date();
            const timestamp = now.getFullYear() + ('0' + (now.getMonth() + 1)).slice(-2) + ('0' + now.getDate()).slice(-2) + '_' + ('0' + now.getHours()).slice(-2) + ('0' + now.getMinutes()).slice(-2);

            doc.save('absences_' + timestamp + '.pdf');
        });
        
    </script>
}
<script>

    function filterTable() {
        var input = document.getElementById("filterInput").value.toUpperCase();
        var table = document.getElementById("etudiantTable");
        var tr = table.getElementsByTagName("tr");
        for (var i = 0; i < tr.length; i++) {
            var tdNom = tr[i].getElementsByTagName("td")[0];
            var tdEmagement = tr[i].getElementsByTagName("td")[2];
            var tdStatus = tr[i].getElementsByTagName("td")[3];
            if (tdNom || tdEmagement || tdStatus) {
                var nom = tdNom.textContent || tdNom.innerText;
                var Emagement = tdEmagement.textContent || tdEmagement.innerText;
                var status = tdStatus.textContent || tdStatus.innerText;
                if (nom.toUpperCase().indexOf(input) > -1 ||
                    Emagement.toString().indexOf(input) > -1 ||
                    status.toUpperCase().indexOf(input) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>


<center>
    <h2 >
        Liste des étudiants qui ont émargés
    </h2>
</center>
<br />
<div>
    <label style="color: #1e90ff;" for="filterInput">Recherche :</label>
    <input type="text" id="filterInput" onkeyup="filterTable()" placeholder="Rechercher...">
    <button id="generate-pdf">Générer PDF</button>

    <br />
</div>

<br />


<table id="etudiantTable" class="table">
    <thead>
        <tr>
            <th class="table-header">@Html.DisplayName("Nom")</th>
            <th class="table-header">@Html.DisplayName("Prenom")</th>
            <th class="table-header">@Html.DisplayName("Emagement")</th>
            <th class="table-header">@Html.DisplayName("Status")</th>

        </tr>
    </thead>
    <tbody>
        @if (ListeEtudiant != null)
        {
            @foreach (Emargement emargement in ListePresence)
            {
                @foreach (Etudiant etudiant in ListeEtudiant)
                {
                    @if (emargement.EtudiantId == etudiant.Id)
                    {
                         string presenceStatus = GetPresenceStatus(emargement.DateEmargement);
                         string statusClass = (presenceStatus == "Absent") ? "text-danger" : "text-success";
                         string emargementText = (presenceStatus == "Présent") ? "Emargé" : "Absent";
                                <tr class="table-row">
                                    <td>@etudiant.Nom</td>
                                    <td>@etudiant.Prenom</td>
                                    <td>@emargement.DateEmargement</td>
                                    <td class="status-column @statusClass">@emargementText</td>
                                </tr>
                    }
                }
            }
        }

    </tbody>
</table>



