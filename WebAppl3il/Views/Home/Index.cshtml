@using System.Data
@using Api3il.Models;
@model DataTable

@{
    var ListeEtudiant = ViewData["Etudiant"] as List<Etudiant>;
    var ListeGroupe = ViewData["Groupe"] as List<Groupe>;
    var ListePromotion = ViewData["Promotion"] as List<Promotion>;
    var ListePresence = ViewData["Emargement"] as List<Emargement>;

  

    string GetPresenceStatus(DateTime dateEmargement)
    {
        TimeSpan timeOfDay = dateEmargement.TimeOfDay;

        TimeSpan matinStart = new TimeSpan(8, 30, 0);
        TimeSpan matinEnd = new TimeSpan(8, 35, 0);
        TimeSpan apresMidiStart = new TimeSpan(13, 30, 0);
        TimeSpan apresMidiEnd = new TimeSpan(13, 35, 0);

        if ((timeOfDay >= matinStart && timeOfDay <= matinEnd) || (timeOfDay >= apresMidiStart && timeOfDay <= apresMidiEnd))
        {
            return "Présent";
        }
        else
        {
            return "Absent";
        }
    }
}

<style>
    body {
        background-color: #f2f2f2;
        font-family: Arial, sans-serif;
    }

    .header {
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 20px 0;
    }

        .header img {
            height: 50px; /* Taille du logo */
            margin-right: 20px; /* Espace entre le logo et le titre */
        }

        .header h2 {
            color: #014e67; /* Couleur bleu */
            font-size: 24px; /* Taille du titre plus petite */
        }

    .table-header {
        background-color: #014e67;
        color: #fff;
        font-weight: bold;
        font-size: 20px;
        padding: 10px;
    }

    .table-row {
        background-color: #fff;
    }

        .table-row:hover {
            background-color: #f8f9fa;
        }

    .filter-select {
        display: inline-block;
        margin-left: 10px;
        position: relative;
    }

        .filter-select select {
            padding: 5px;
            border: 1px solid #ccc;
            border-radius: 5px;
            width: 200px;
        }

        .filter-select::before {
            content: "\f0d7";
            font-family: "Font Awesome 5 Free";
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            font-size: 14px;
            color: #999;
            pointer-events: none;
        }

        .filter-select select:focus + ::before {
            color: #007bff;
        }

    .filter-input {
        margin-bottom: 10px;
        padding: 5px;
        border: 1px solid #ccc;
        border-radius: 5px;
        width: 300px;
    }

    .search-label {
        color: #ff6600;
        font-weight: bold;
    }
</style>

<script>
    function filterTable() {
        var input = document.getElementById("filterInput").value.toUpperCase();
        var table = document.getElementById("etudiantTable");
        var tr = table.getElementsByTagName("tr");
        var selectedStatus = document.getElementById("statusFilter").value;

        for (var i = 1; i < tr.length; i++) {
            var tdNom = tr[i].getElementsByTagName("td")[0];
            var tdGroupe = tr[i].getElementsByTagName("td")[2];
            var tdPromotion = tr[i].getElementsByTagName("td")[3];
            var tdDateEmargement = tr[i].getElementsByTagName("td")[4];
            var tdStatus = tr[i].getElementsByTagName("td")[5];

            if (tdNom || tdGroupe || tdPromotion || tdDateEmargement || tdStatus) {
                var nom = tdNom.textContent || tdNom.innerText;
                var groupe = tdGroupe.textContent || tdGroupe.innerText;
                var promotion = tdPromotion.textContent || tdPromotion.innerText;
                var emargement = tdDateEmargement.textContent || tdDateEmargement.innerText;
                var statut = tdStatus.textContent || tdStatus.innerText;

                if ((nom.toUpperCase().indexOf(input) > -1 ||
                    groupe.toUpperCase().indexOf(input) > -1 ||
                    promotion.toUpperCase().indexOf(input) > -1 ||
                    emargement.toString().indexOf(input) > -1) &&
                    (selectedStatus === "" || groupe === selectedStatus)) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>

<div class="header">
    <img src="~/img/logo-3il-part@2x.png" alt="Logo 3IL" />
    <h2>Liste des étudiants qui ont émargé</h2>
</div>

<div>
    <label for="filterInput" class="search-label">Recherche :</label>
    <input type="text" id="filterInput" onkeyup="filterTable()" placeholder="Rechercher par groupe, nom ou promotion..." class="filter-input">
    <div class="filter-select">
        <select id="statusFilter" onchange="filterTable()">
            <option value="">Tous</option>
            <option value="ERIS-FA">ERIS-FA</option>
            <option value="MS2D-FA">MS2D-FA</option>
        </select>
    </div>
</div>

<table id="etudiantTable" class="table">
    <thead>
        <tr>
            <th class="table-header">@Html.DisplayName("Nom")</th>
            <th class="table-header">@Html.DisplayName("Prénom")</th>
            <th class="table-header">@Html.DisplayName("Groupe")</th>
            <th class="table-header">@Html.DisplayName("Promotion")</th>
            <th class="table-header">@Html.DisplayName("Présence")</th>
            <th class="table-header">@Html.DisplayName("Statut")</th>
        </tr>
    </thead>
    <tbody>
        @if (ListeEtudiant != null)
        {
            @foreach (Etudiant etudiant  in ListeEtudiant)
            {
                @foreach (Groupe groupe in ListeGroupe)
                {
                    @foreach ( Promotion promotion in ListePromotion)
                    {
                        @foreach (Emargement emargement in ListePresence)
                        {
                            @if (etudiant.PromotionId == promotion.Id & emargement.EtudiantId == etudiant.Id)
                            {
                                string presenceStatus = GetPresenceStatus(emargement.DateEmargement);
                                string statusClass = (presenceStatus == "Absent") ? "text-danger" : "text-success";
                                string emargementText = (presenceStatus == "Présent") ? "Emargé" : "Absent";
                                <tr class="table-row">
                                    <td>@etudiant.Nom</td>
                                    <td>@etudiant.Prenom</td>
                                    <td>@groupe.Nom</td>
                                    <td>@promotion.Annee</td>
                                    <td>@emargement.DateEmargement</td>
                                    <td class="status-column @statusClass">@emargementText</td>
                                </tr>
                            }
                        }
                    }
                }

        
                

               
            }
        }
    </tbody>
</table>
